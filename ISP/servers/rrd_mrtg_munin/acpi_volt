#!/usr/bin/perl -w
#
# Magic markers:
#%# family=manual
#%# capabilities=autoconf suggest

use strict;

$ENV{'LANG'} = "C"; # Force parseable output from sensors.
$ENV{'LC_ALL'} = "C"; # Force parseable output from sensors.
my $ACPI = $ENV{'acpi'} || 'acpi';
my $ACPI_args = '-V';
my %config = (
	       volt => {
			 #regex => qr/^.*(\d+)\%.*(\d+)\%.*/m,
			 regex => '^.*(\d+)\%.*(\d+)\%.*',
			 title => 'Voltages',
			 vtitle => 'Volt',
			 sensors => ['Full','capacity'],
			 graph_args => '--base 1000 --logarithmic'
	               },
             );

if ( defined $ARGV[0] and $ARGV[0] eq 'autoconf' ) {
  # Now see if "sensors" can run
  my $text = `$ACPI 2>/dev/null`;
  if ($?) {
    if ($? == -1) {
      print "no (program $ACPI not found)\n";
    } else {
      print "no (program $ACPI died)\n";
    }
    exit 1;
  }

  unless ($text =~ /[° ]C/) {
    print "no (no temperature readings)\n";
    exit 1;
  }

  print "yes\n";
  exit 0;
}

if (defined $ARGV[0] and $ARGV[0] eq 'suggest') {
  my $text = `$ACPI 2>/dev/null`;
  if ($?) {
    if ($? == -1) {
      print "no (program $ACPI not found)\n";
    } else {
      print "no (program $ACPI died)\n";
    }
    exit 1;
  }

  foreach my $func (keys %config) {
    print $func, "\n" if $text =~ $config{$func}->{regex};
  }
  exit;
}

$0 =~ /acpi_(.+)*$/;
my $func = $1;
unless (defined $func and exists $config{$func}) {
  print STDERR 'plugin must be called as one of ',join(' ', map { 'acpi_'.$_ } keys %config), "\n";
  exit 2;
}

if ( defined $ARGV[0] and $ARGV[0] eq 'config' ) {
  print "graph_title $config{$func}->{title}\n";
  print "graph_vtitle $config{$func}->{vtitle}\n";
  print "graph_args $config{$func}->{graph_args}\n";
  print "graph_category sensors\n";
  for(my $i=0;$i<=(@{ $config{$func}{sensors} } -1);$i++){
    print "$func$i.label $config{$func}{sensors}[$i]\n";
  }
  exit 0;
}

my @values = split / /, `echo -n \$($ACPI $ACPI_args|grep Bat|awk '{print \$NF}'|sed 's/\%//')`;
for(my $i=0;$i<=(@values -1);$i++){
    print "$func$i.value $values[$i]\n";
}

# vim:syntax=perl
